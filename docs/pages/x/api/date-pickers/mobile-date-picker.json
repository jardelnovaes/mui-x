{
  "props": {
    "autoFocus": { "type": { "name": "bool" } },
    "className": { "type": { "name": "string" } },
    "closeOnSelect": {
      "type": { "name": "bool" },
      "default": "`true` for desktop, `false` for mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop)."
    },
    "components": {
      "type": { "name": "object" },
      "default": "{}",
      "deprecated": true,
      "deprecationInfo": "Please use <code>slots</code>."
    },
    "componentsProps": {
      "type": { "name": "object" },
      "default": "{}",
      "deprecated": true,
      "deprecationInfo": "Please use <code>slotProps</code>."
    },
    "dayOfWeekFormatter": {
      "type": { "name": "func" },
      "default": "(_day: string, date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()",
      "signature": {
        "type": "function(day: string, date: TDate) => string",
        "describedArgs": ["day", "date"],
        "returned": "string"
      }
    },
    "defaultCalendarMonth": {
      "type": { "name": "any" },
      "deprecated": true,
      "deprecationInfo": "Consider using <code>referenceDate</code> instead."
    },
    "defaultValue": { "type": { "name": "any" } },
    "disabled": { "type": { "name": "bool" }, "default": "false" },
    "disableFuture": { "type": { "name": "bool" }, "default": "false" },
    "disableHighlightToday": { "type": { "name": "bool" }, "default": "false" },
    "disableOpenPicker": { "type": { "name": "bool" }, "default": "false" },
    "disablePast": { "type": { "name": "bool" }, "default": "false" },
    "displayWeekNumber": { "type": { "name": "bool" } },
    "fixedWeekNumber": { "type": { "name": "number" }, "default": "undefined" },
    "format": { "type": { "name": "string" } },
    "formatDensity": {
      "type": { "name": "enum", "description": "'dense'<br>&#124;&nbsp;'spacious'" },
      "default": "\"dense\""
    },
    "inputRef": { "type": { "name": "custom", "description": "ref" } },
    "label": { "type": { "name": "node" } },
    "loading": { "type": { "name": "bool" }, "default": "false" },
    "localeText": { "type": { "name": "object" } },
    "maxDate": { "type": { "name": "any" } },
    "minDate": { "type": { "name": "any" } },
    "monthsPerRow": {
      "type": { "name": "enum", "description": "3<br>&#124;&nbsp;4" },
      "default": "3"
    },
    "name": { "type": { "name": "string" } },
    "onAccept": {
      "type": { "name": "func" },
      "signature": { "type": "function(value: TValue) => void", "describedArgs": ["value"] }
    },
    "onChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(value: TValue, context: FieldChangeHandlerContext<TError>) => void",
        "describedArgs": ["value", "context"]
      }
    },
    "onClose": { "type": { "name": "func" } },
    "onError": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(error: TError, value: TValue) => void",
        "describedArgs": ["error", "value"]
      }
    },
    "onMonthChange": {
      "type": { "name": "func" },
      "signature": { "type": "function(month: TDate) => void", "describedArgs": ["month"] }
    },
    "onOpen": { "type": { "name": "func" } },
    "onSelectedSectionsChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(newValue: FieldSelectedSections) => void",
        "describedArgs": ["newValue"]
      }
    },
    "onViewChange": {
      "type": { "name": "func" },
      "signature": { "type": "function(view: TView) => void", "describedArgs": ["view"] }
    },
    "onYearChange": {
      "type": { "name": "func" },
      "signature": { "type": "function(year: TDate) => void", "describedArgs": ["year"] }
    },
    "open": { "type": { "name": "bool" }, "default": "false" },
    "openTo": {
      "type": {
        "name": "enum",
        "description": "'day'<br>&#124;&nbsp;'month'<br>&#124;&nbsp;'year'"
      }
    },
    "orientation": {
      "type": { "name": "enum", "description": "'landscape'<br>&#124;&nbsp;'portrait'" }
    },
    "reduceAnimations": {
      "type": { "name": "bool" },
      "default": "`@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13"
    },
    "referenceDate": {
      "type": { "name": "any" },
      "default": "The closest valid date-time using the validation props, except callbacks like `shouldDisable<...>`."
    },
    "renderLoading": {
      "type": { "name": "func" },
      "default": "() => <span data-mui-test=\"loading-progress\">...</span>",
      "signature": {
        "type": "function() => React.ReactNode",
        "describedArgs": [],
        "returned": "React.ReactNode"
      }
    },
    "selectedSections": {
      "type": {
        "name": "union",
        "description": "'all'<br>&#124;&nbsp;'day'<br>&#124;&nbsp;'hours'<br>&#124;&nbsp;'meridiem'<br>&#124;&nbsp;'minutes'<br>&#124;&nbsp;'month'<br>&#124;&nbsp;'seconds'<br>&#124;&nbsp;'weekDay'<br>&#124;&nbsp;'year'<br>&#124;&nbsp;number<br>&#124;&nbsp;{ endIndex: number, startIndex: number }"
      }
    },
    "shouldDisableDate": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(day: TDate) => boolean",
        "describedArgs": ["day"],
        "returned": "boolean"
      }
    },
    "shouldDisableMonth": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(month: TDate) => boolean",
        "describedArgs": ["month"],
        "returned": "boolean"
      }
    },
    "shouldDisableYear": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(year: TDate) => boolean",
        "describedArgs": ["year"],
        "returned": "boolean"
      }
    },
    "showDaysOutsideCurrentMonth": { "type": { "name": "bool" }, "default": "false" },
    "slotProps": { "type": { "name": "object" }, "default": "{}" },
    "slots": {
      "type": { "name": "object" },
      "default": "{}",
      "additionalInfo": { "slotsApi": true }
    },
    "sx": {
      "type": {
        "name": "union",
        "description": "Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"
      },
      "additionalInfo": { "sx": true }
    },
    "timezone": {
      "type": { "name": "string" },
      "default": "The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.",
      "seeMoreLink": {
        "url": "https://mui.com/x/react-date-pickers/timezone/",
        "text": "timezones documention"
      }
    },
    "value": { "type": { "name": "any" } },
    "view": {
      "type": {
        "name": "enum",
        "description": "'day'<br>&#124;&nbsp;'month'<br>&#124;&nbsp;'year'"
      }
    },
    "viewRenderers": {
      "type": { "name": "shape", "description": "{ day?: func, month?: func, year?: func }" }
    },
    "views": {
      "type": {
        "name": "arrayOf",
        "description": "Array&lt;'day'<br>&#124;&nbsp;'month'<br>&#124;&nbsp;'year'&gt;"
      }
    },
    "yearsPerRow": {
      "type": { "name": "enum", "description": "3<br>&#124;&nbsp;4" },
      "default": "3"
    }
  },
  "name": "MobileDatePicker",
  "imports": [
    "import { MobileDatePicker } from '@mui/x-date-pickers/MobileDatePicker';",
    "import { MobileDatePicker } from '@mui/x-date-pickers';",
    "import { MobileDatePicker } from '@mui/x-date-pickers-pro';"
  ],
  "slots": [
    {
      "name": "ActionBar",
      "description": "Custom component for the action bar, it is placed below the picker views.",
      "default": "PickersActionBar",
      "class": null
    },
    {
      "name": "CalendarHeader",
      "description": "Custom component for calendar header.\nCheck the [PickersCalendarHeader](https://mui.com/x/api/date-pickers/pickers-calendar-header/) component.",
      "default": "PickersCalendarHeader",
      "class": null
    },
    {
      "name": "Day",
      "description": "Custom component for day.\nCheck the [PickersDay](https://mui.com/x/api/date-pickers/pickers-day/) component.",
      "default": "PickersDay",
      "class": null
    },
    {
      "name": "Dialog",
      "description": "Custom component for the dialog inside which the views are rendered on mobile.",
      "default": "PickersModalDialogRoot",
      "class": null
    },
    {
      "name": "Field",
      "description": "Component used to enter the date with the keyboard.",
      "class": null
    },
    {
      "name": "Layout",
      "description": "Custom component for wrapping the layout.\nIt wraps the toolbar, views, action bar, and shortcuts.",
      "class": null
    },
    {
      "name": "LeftArrowIcon",
      "description": "Icon displayed in the left view switch button.",
      "default": "ArrowLeft",
      "class": null
    },
    {
      "name": "MobilePaper",
      "description": "Custom component for the paper rendered inside the mobile picker's Dialog.",
      "default": "Paper from '@mui/material'.",
      "class": null
    },
    {
      "name": "MobileTransition",
      "description": "Custom component for the mobile dialog [Transition](https://mui.com/material-ui/transitions/).",
      "default": "Fade from '@mui/material'.",
      "class": null
    },
    {
      "name": "NextIconButton",
      "description": "Button allowing to switch to the right view.",
      "default": "IconButton",
      "class": null
    },
    {
      "name": "PreviousIconButton",
      "description": "Button allowing to switch to the left view.",
      "default": "IconButton",
      "class": null
    },
    {
      "name": "RightArrowIcon",
      "description": "Icon displayed in the right view switch button.",
      "default": "ArrowRight",
      "class": null
    },
    {
      "name": "Shortcuts",
      "description": "Custom component for the shortcuts.",
      "default": "PickersShortcuts",
      "class": null
    },
    {
      "name": "SwitchViewButton",
      "description": "Button displayed to switch between different calendar views.",
      "default": "IconButton",
      "class": null
    },
    {
      "name": "SwitchViewIcon",
      "description": "Icon displayed in the SwitchViewButton. Rotated by 180° when the open view is 'year'.",
      "default": "ArrowDropDown",
      "class": null
    },
    {
      "name": "TextField",
      "description": "Form control with an input to render the value inside the default field.\nReceives the same props as `@mui/material/TextField`.",
      "default": "TextField from '@mui/material'",
      "class": null
    },
    {
      "name": "Toolbar",
      "description": "Custom component for the toolbar rendered above the views.",
      "default": "DatePickerToolbar",
      "class": null
    }
  ],
  "classes": [],
  "spread": true,
  "themeDefaultProps": null,
  "muiName": "MuiMobileDatePicker",
  "filename": "/packages/x-date-pickers/src/MobileDatePicker/MobileDatePicker.tsx",
  "inheritance": null,
  "demos": "<ul><li><a href=\"/x/react-date-pickers/date-picker/\">Date Picker</a></li>\n<li><a href=\"/x/react-date-pickers/validation/\">Date and Time Pickers - Validation</a></li></ul>",
  "cssComponent": false
}
